[
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Register a patient and after that set confirm",
        "description": "",
        "id": "register-a-patient;register-a-patient-and-after-that-set-confirm",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2103856951,
              "status": "passed"
            },
            "line": 6,
            "name": "The URL application is accessed with success",
            "match": {
              "location": "LoginGivenStepsDef.theURLApplicationIsAccessedWithSuccess()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 475304949,
              "status": "passed"
            },
            "line": 7,
            "name": "User is send the valid credentials",
            "match": {
              "location": "LoginWhenStepsDef.userIsSendTheValidCredentials()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 99426343,
              "status": "passed"
            },
            "line": 8,
            "name": "User is send one \"Inpatient Ward\"",
            "match": {
              "arguments": [
                {
                  "val": "Inpatient Ward",
                  "offset": 18
                }
              ],
              "location": "LoginWhenStepsDef.userIsSendOneLocation(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 944594516,
              "status": "passed"
            },
            "line": 9,
            "name": "Login button is pressed",
            "match": {
              "location": "LoginThenStepsDef.userIsLoggedInWithSuccess()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4692769953,
              "status": "passed"
            },
            "line": 10,
            "name": "Register a patient button is sent",
            "match": {
              "location": "RegisterPatientThenStepsDef.registerAPatientButtonIsSent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 160180542,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id\u003d\"fr6776-field\"]\"}\n  (Session info: chrome\u003d72.0.3626.109)\n  (Driver info: chromedriver\u003d2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1),platform\u003dWindows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 0 milliseconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.14.0\u0027, revision: \u0027aacccce0\u0027, time: \u00272018-08-02T20:19:58.91Z\u0027\nSystem info: host: \u0027ALEX-PC\u0027, ip: \u0027192.168.56.1\u0027, os.name: \u0027Windows 7\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.1\u0027, java.version: \u00271.8.0_40\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628402 (536cd7adbad73a..., userDataDir: C:\\Users\\alex\\AppData\\Local...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:51200}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 72.0.3626.109, webStorageEnabled: true}\nSession ID: 56bfd1e438924c4ea7b7254d35674d78\n*** Element info: {Using\u003dxpath, value\u003d//*[@id\u003d\"fr6776-field\"]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\r\n\tat org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)\r\n\tat cucumber.steps.RegisterPatientThenStepsDef.theNameOfThePatientIsProvided(RegisterPatientThenStepsDef.java:23)\r\n\tat âœ½.And The name of the patient is provided(RegisterPatient.feature:11)\r\n",
              "status": "failed"
            },
            "line": 11,
            "name": "The name of the patient is provided",
            "match": {
              "location": "RegisterPatientThenStepsDef.theNameOfThePatientIsProvided(PatientDetails\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "given",
                  "middle",
                  "familyName"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Alex",
                  "Andrei",
                  "Albu"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Maria",
                  "Ana",
                  "Popescu"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Test1"
          }
        ]
      }
    ],
    "name": "Register a patient",
    "description": "",
    "id": "register-a-patient",
    "keyword": "Feature",
    "uri": "RegisterPatient.feature",
    "tags": [
      {
        "line": 1,
        "name": "@RegisterPatient"
      }
    ]
  }
]