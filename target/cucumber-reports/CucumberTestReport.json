[
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Register a patient and after that set confirm",
        "description": "",
        "id": "register-a-patient;register-a-patient-and-after-that-set-confirm",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1983769174,
              "status": "passed"
            },
            "line": 6,
            "name": "The URL application is accessed with success",
            "match": {
              "location": "LoginGivenStepsDef.theURLApplicationIsAccessedWithSuccess()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 241978880,
              "status": "passed"
            },
            "line": 7,
            "name": "User is send the valid \"Username\" and \"Password\"",
            "match": {
              "arguments": [
                {
                  "val": "Username",
                  "offset": 24
                },
                {
                  "val": "Password",
                  "offset": 39
                }
              ],
              "location": "LoginWhenStepsDef.userIsSendTheValidCredentials(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44953174,
              "error_message": "org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression Inpatient Ward because of the following error:\nSyntaxError: Failed to execute \u0027evaluate\u0027 on \u0027Document\u0027: The string \u0027Inpatient Ward\u0027 is not a valid XPath expression.\n  (Session info: chrome\u003d71.0.3578.98)\n  (Driver info: chromedriver\u003d2.46.628402 (536cd7adbad73a3783fdc2cab92ab2ba7ec361e1),platform\u003dWindows NT 10.0.15063 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 0 milliseconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html\nBuild info: version: \u00273.14.0\u0027, revision: \u0027aacccce0\u0027, time: \u00272018-08-02T20:19:58.91Z\u0027\nSystem info: host: \u0027EN614360\u0027, ip: \u0027192.168.167.21\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_171\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628402 (536cd7adbad73a..., userDataDir: C:\\Users\\aalbu\\AppData\\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:56879}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 71.0.3578.98, webStorageEnabled: true}\nSession ID: 0c04fa07ebeaf9e18e1377d30afe4958\n*** Element info: {Using\u003dxpath, value\u003dInpatient Ward}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)\r\n\tat org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)\r\n\tat org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)\r\n\tat cucumber.Base.getElementType(Base.java:38)\r\n\tat cucumber.steps.LoginWhenStepsDef.userIsSendOneLocation(LoginWhenStepsDef.java:19)\r\n\tat âœ½.And User is send one \"Inpatient Ward\"(RegisterPatient.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "User is send one \"Inpatient Ward\"",
            "match": {
              "arguments": [
                {
                  "val": "Inpatient Ward",
                  "offset": 18
                }
              ],
              "location": "LoginWhenStepsDef.userIsSendOneLocation(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "\"Login\" button is pressed",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 1
                }
              ],
              "location": "LoginThenStepsDef.userIsLoggedInWithSuccess(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "\"RegisterPatient\" button is sent",
            "match": {
              "arguments": [
                {
                  "val": "RegisterPatient",
                  "offset": 1
                }
              ],
              "location": "RegisterPatientThenStepsDef.registerAPatientButtonIsSent(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "The PatientDetails with \"GivenName\" and \"MiddleName\" and \"FamilyName\" are set",
            "match": {
              "arguments": [
                {
                  "val": "GivenName",
                  "offset": 25
                },
                {
                  "val": "MiddleName",
                  "offset": 41
                },
                {
                  "val": "FamilyName",
                  "offset": 58
                }
              ],
              "location": "RegisterPatientThenStepsDef.theNameOfThePatientIsProvidedAndNextSectionIsSet(String,String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Given",
                  "Middle",
                  "FamilyName"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Alex",
                  "Andrei",
                  "Albu"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "The gender is provided",
            "match": {
              "location": "RegisterPatientThenStepsDef.theGenderIsProvided(PatientDetails\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "Path"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Male",
                  "//*[@id\u003d\"gender-field\"]/option[1]"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "The birthday is set",
            "match": {
              "location": "RegisterPatientThenStepsDef.theBirthdayIsSet(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Day",
                  "Year"
                ],
                "line": 18
              },
              {
                "cells": [
                  "10",
                  "1990"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "User will send the address \"Bucuresti\"",
            "match": {
              "arguments": [
                {
                  "val": "Bucuresti",
                  "offset": 28
                }
              ],
              "location": "RegisterPatientThenStepsDef.userWillSendTheAddress(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "User will provide the telephone \"0734364811\"",
            "match": {
              "arguments": [
                {
                  "val": "0734364811",
                  "offset": 33
                }
              ],
              "location": "RegisterPatientThenStepsDef.userWillProvideTheTelephone(Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "User will send the patient related to",
            "match": {
              "location": "RegisterPatientThenStepsDef.userWillSendThePatientRelatedTo(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LastName",
                  "FirstName"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Albu",
                  "Alexandru"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "User will press confirm",
            "match": {
              "location": "RegisterPatientThenStepsDef.userWillPressConfirm()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "Page With User Information will appear",
            "match": {
              "location": "RegisterPatientThenStepsDef.pageWithUserInformationWillAppear()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@Test1"
          }
        ]
      }
    ],
    "name": "Register a patient",
    "description": "",
    "id": "register-a-patient",
    "keyword": "Feature",
    "uri": "RegisterPatient.feature",
    "tags": [
      {
        "line": 1,
        "name": "@RegisterPatient"
      }
    ]
  }
]